S -> FROM OBJECT IMPORT OBJECT AS OBJECT
S -> FROM OBJECT IMPORT OBJECT
S -> IMPORT OBJECT
S -> IMPORT OBJECT AS OBJECT
S -> VARIABLES
S -> MAIN

MAIN -> MAIN MAIN | CLASS_STATEMENT | IF_STATEMENT | WHILE_STATEMENT | WHILE_STATEMENT BREAK_CONTINUE | FOR_STATEMENT COLON | FOR_STATEMENT COLON BREAK_CONTINUE | DEF_STATEMENT | DEF_STATEMENT RETURN | RAISE_STATEMENT | pass

IF_STATEMENT -> IF_CONTENT | IF_CONTENT ELSE_STATEMENT | IF_CONTENT ELIF_STATEMENT
IF_CONTENT -> IF_CONDITION COLON
ELSE_STATEMENT -> ELSE_CONTENT | ELSE IF_STATEMENT 
ELSE_CONTENT -> ELSE COLON
ELIF_STATEMENT -> ELIF_CONTENT | ELIF_CONTENT IF_STATEMENT 
ELIF_CONTENT -> ELIF CONDITION COLON
IF_CONDITION -> IF CONDITION

WHILE_STATEMENT -> WHILE_CONTENT COLON
WHILE_CONTENT -> WHILE CONDITION

FOR_STATEMENT -> FOR_CONTENT RANGE_CONTENT | FOR_CONTENT OBJECT | FOR_CONTENT ARRAY
FOR_CONTENT -> FOR DOT IN
RANGE_CONTENT -> RANGE OPARENTHESES MULTI_MULTI CPARENTHESES
MULTI_MULTI -> OBJECT | MULTI_MULTI NEXT_MULTI
NEXT_MULTI -> COMMA MULTI_MULTI

WITH_STATEMENT -> WITH_CONTENT COLON
WITH_CONTENT -> WITH OPEN PARENTHESES AS OBJECT

CONDITION -> OPARENTHESES CONDITION CPARENTHESES | CONDITION LOGICAL_OP CONDITION | EXPRESSION RELATIONAL_OP EXPRESSION | False | None | True | is
EXPRESSION -> OBJECT | OPARENTHESES EXPRESSION CPARENTHESES | EXPRESSION ARITHMATIC_OP EXPRESSION
ARITHMATIC_OP -> - | + | * | / | %
LOGICAL_OP -> and | or | not
RELATIONAL_OP -> = | > | < | GREATER EQUAL | LESS EQUAL | LESS GREATER

BREAK_CONTINUE -> break | continue

PARENTHESES -> OPARENTHESES CPARENTHESES | OPARENTHESES PARENTHESES_OBJECT CPARENTHESES
PARENTHESES_OBJECT -> DOT
PARENTHESES_OBJECT -> DOT PARENTHESES

DEF_STATEMENT -> DEF_NAME DEF_PARAMS COLON
DEF_NAME -> DEF OBJECT
DEF_PARAMS -> DEF_CONTENT | DEF_CONTENT ANNO OBJECT
DEF_CONTENT -> OPARENTHESES DOT COLON OBJECT CPARENTHESES
DEF_PARAM -> MULTI_MULTI | MULTI_MULTI COLON OBJECT | DEF_PARAM COMMA DEF_PARAM
ANNO -> LESS GREATER

CLASS_STATEMENT -> CLASS_NAME COLON | CLASS_NAME PARENTHESES COLON
CLASS_NAME -> CLASS OBJECT

RAISE_STATEMENT -> RAISE EXCEPTION PARENTHESES

VARIABLES -> OBJECT EQUAL DOT | ARRAY EQUAL OBJECT | OBJECT EQUAL ARRAY | OBJECT EQUAL OBJECT

ARRAY -> OBRACKET CBRACKET | OBRACKET DOT CBRACKET | ARRAY ARRAY | FOR_STATEMENT

DOT -> OBJECT | DOT NEXT_DOT | PARENTHESES
NEXT_DOT -> DOT_SYM DOT


OPARENTHESES -> (
CPARENTHESES -> )
FROM -> from
OBJECT -> object
IMPORT -> import
AS -> as
EQUAL -> =
GREATER -> >
LESS -> <
DOT_SYM -> .
OBRACKET -> [
CBRACKET -> ]
IF -> if
ELIF -> elif
ELSE -> else
COLON -> :
COMMA -> ,
RETURN -> return
DEF -> def
CLASS -> class
RAISE -> raise
EXCEPTION -> Exception
SPACE -> \t
EOS -> \n


yang belum :
comment, space, end of statement, ...