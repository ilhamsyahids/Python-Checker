S -> VARIABLES
S -> MAIN

MAIN -> CLASS_STATEMENT | IF_STATEMENT | WHILE_STATEMENT | WHILE_STATEMENT ENDLINE BREAK_CONTINUE | FOR_STATEMENT COLON | FOR_STATEMENT COLON BREAK_CONTINUE | DEF_STATEMENT | DEF_STATEMENT RETURN | RAISE_STATEMENT | pass | COMMENT

ENDLINE_MAIN -> ENDLINE MAIN

# IMPORT
IMPORT_STATEMENT -> IMPORT_FROM IMPORT_CONTENT_AS | IMPORT_CONTENT IMPORT_AS | IMPORT_FROM IMPORT_CONTENT
IMPORT_CONTENT_AS -> IMPORT_CONTENT IMPORT_AS
IMPORT_FROM -> FROM OBJECT
IMPORT_CONTENT -> IMPORT OBJECT
IMPORT_AS -> AS OBJECT

# IF
IF_STATEMENT -> IF_CONDITION2 ENDLINE_MAIN | IF_CONTENT ELSE_STATEMENT | IF_CONTENT ELIF_STATEMENT
IF_CONTENT -> IF_CONDITION2 ENDLINE_MAIN
ELSE_STATEMENT -> ELSE_CONTENT ENDLINE_MAIN
ELSE_CONTENT -> ELSE COLON
ELIF_STATEMENT -> ELIF_CONTENT2 ENDLINE_MAIN
ELIF_CONTENT2 -> ELIF_CONTENT COLON 
ELIF_CONTENT -> ELIF CONDITION
IF_CONDITION2 -> IF_CONDITION COLON
IF_CONDITION -> IF CONDITION

# WHILE
WHILE_STATEMENT -> WHILE_CONTENT2 ENDLINE_MAIN | WHILE_CONTENT2 BREAK_CONTINUE
WHILE_CONTENT2 -> WHILE_CONTENT COLON
WHILE_CONTENT -> WHILE CONDITION

# FOR
FOR_STATEMENT -> FOR_CONTENT RANGE_CONTENT | FOR_CONTENT OBJECT | FOR_CONTENT ARRAY
FOR_CONTENT2 -> FOR_CONTENT IN
FOR_CONTENT -> FOR MULTI_MULTI
RANGE_CONTENT -> RANGE PARENTHESES

MULTI_MULTI -> OBJECT | MULTI_MULTI NEXT_MULTI | DOT MULTI_MULTI | MULTI_MULTI DOT
NEXT_MULTI -> COMMA MULTI_MULTI

# WITH 
WITH_STATEMENT -> WITH_CONTENT COLON
WITH_CONTENT -> WITH_OPEN PARENTHESES_AS
PARENTHESES_AS -> PARENTHESES IMPORT_AS
WITH_OPEN -> WITH OPEN

# SUPPORT
CONDITION -> OPARENTHESES CONDITION_CPARENTHESES | CONDITION LOGICAL_OP_CONDITION | EXPRESSION RELATIONAL_OP_EXPRESSION | False | None | True | is | NUMBER
CONDITION_CPARENTHESES -> CONDITION CPARENTHESES
LOGICAL_OP_CONDITION -> LOGICAL_OP CONDITION
RELATIONAL_OP_EXPRESSION -> RELATIONAL_OP EXPRESSION
EXPRESSION -> NUMBER | OBJECT | OPARENTHESES EXPRESSION_CPARENTHESES | EXPRESSION ARITHMATIC_OP_EXPRESSION
ARITHMATIC_OP_EXPRESSION -> ARITHMATIC_OP EXPRESSION
EXPRESSION_CPARENTHESES -> EXPRESSION CPARENTHESES
ARITHMATIC_OP -> - | + | * | / | %
LOGICAL_OP -> and | or | not
RELATIONAL_OP -> = | > | < | GREATER EQUAL | LESS EQUAL | LESS GREATER
BREAK_CONTINUE -> break | continue

# PARENTHESES
PARENTHESES -> OPARENTHESES CPARENTHESES | OPARENTHESES PARENTHESES_OBJECT_CPARENTHESES
PARENTHESES_OBJECT_CPARENTHESES -> PARENTHESES_OBJECT CPARENTHESES
PARENTHESES_OBJECT -> MULTI_MULTI | MULTI_MULTI PARENTHESES
PARENTHESES_OBJECT -> DOT PARENTHESES

# DEF
DEF_STATEMENT -> DEF_NAME DEF_CONTENT2
DEF_NAME -> DEF OBJECT
DEF_CONTENT2 -> OBJECT_PARENTHESES | DEF_CONTENT COLON | DEF_CONTENT ANNO3
DEF_CONTENT -> OPARENTHESES DEF_PARAM_CPARENTHESES | PARENTHESES
DEF_PARAM_CPARENTHESES -> DEF_PARAM CPARENTHESES
DEF_PARAM -> MULTI_MULTI | MULTI_MULTI COLON OBJECT | DEF_PARAM COMMA DEF_PARAM
ANNO3 -> ANNO2 COLON
ANNO2 -> ANNO OBJECT
ANNO -> LESS GREATER

# CLASS
CLASS_STATEMENT -> CLASS_NAME CLASS_CONTENT | CLASS_NAME CLASS_CONTENT
CLASS_NAME -> CLASS OBJECT | CLASS OBJECT_PARENTHESES
OBJECT_PARENTHESES -> OBJECT PARENTHESES
CLASS_CONTENT -> COLON ENDLINE_MAIN

RAISE_STATEMENT -> RAISE RAISE_CONTENT
RAISE_CONTENT -> EXCEPTION PARENTHESES

VARIABLES -> OBJECT EQUAL DOT | ARRAY EQUAL OBJECT | OBJECT EQUAL ARRAY | OBJECT EQUAL OBJECT | OBJECT EQUAL NUMBER

ARRAY -> OBRACKET CBRACKET | OBRACKET DOT CBRACKET | ARRAY ARRAY | FOR_STATEMENT

DOT -> OBJECT | NUMBER | DOT NEXT_DOT | PARENTHESES
NEXT_DOT -> DOT_SYM DOT

COMMENT -> QUOTE OBJECT QUOTE | TAG OBJECT

# TERMINAL
OPARENTHESES -> (
CPARENTHESES ->)
FROM -> from
OBJECT -> object
NUMBER -> number
IMPORT -> import
AS -> as
EQUAL -> =
GREATER -> >
LESS -> <
DOT_SYM -> .
OBRACKET -> [
CBRACKET ->]
IF -> if
ELIF -> elif
ELSE -> else
COLON -> :
COMMA -> ,
RETURN -> return
DEF -> def
CLASS -> class
RAISE -> raise
EXCEPTION -> Exception
SPACE -> \\t
ENDLINE -> \\n
TAG -> #
IN -> in
QUOTE -> ''' | """


yang belum :
space, end of statement, ...
